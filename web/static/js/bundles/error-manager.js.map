{
  "version": 3,
  "sources": ["../error-manager.js"],
  "sourcesContent": ["/**\r\n * CORA Error Manager\r\n * Handles errors gracefully with user-friendly messages and retry mechanisms\r\n * Enhanced for accessibility and user experience\r\n */\r\n\r\nclass ErrorManager {\r\n    constructor() {\r\n        this.errorTypes = {\r\n            NETWORK: 'network',\r\n            TIMEOUT: 'timeout',\r\n            VALIDATION: 'validation',\r\n            AUTHENTICATION: 'authentication',\r\n            AUTHORIZATION: 'authorization',\r\n            SERVER: 'server',\r\n            UNKNOWN: 'unknown'\r\n        };\r\n        \r\n        this.errorMessages = {\r\n            [this.errorTypes.NETWORK]: {\r\n                title: 'Connection Issue',\r\n                message: 'Unable to connect to the server. Please check your internet connection and try again.',\r\n                icon: '\uD83C\uDF10',\r\n                retry: true,\r\n                duration: 5000\r\n            },\r\n            [this.errorTypes.TIMEOUT]: {\r\n                title: 'Request Timeout',\r\n                message: 'The request took too long to complete. Please try again.',\r\n                icon: '\u23F1\uFE0F',\r\n                retry: true,\r\n                duration: 4000\r\n            },\r\n            [this.errorTypes.VALIDATION]: {\r\n                title: 'Invalid Input',\r\n                message: 'Please check your input and try again.',\r\n                icon: '\u26A0\uFE0F',\r\n                retry: false,\r\n                duration: 6000\r\n            },\r\n            [this.errorTypes.AUTHENTICATION]: {\r\n                title: 'Authentication Required',\r\n                message: 'Please log in to continue.',\r\n                icon: '\uD83D\uDD10',\r\n                retry: false,\r\n                duration: 0\r\n            },\r\n            [this.errorTypes.AUTHORIZATION]: {\r\n                title: 'Access Denied',\r\n                message: 'You don\\'t have permission to perform this action.',\r\n                icon: '\uD83D\uDEAB',\r\n                retry: false,\r\n                duration: 5000\r\n            },\r\n            [this.errorTypes.SERVER]: {\r\n                title: 'Server Error',\r\n                message: 'Something went wrong on our end. We\\'re working to fix it.',\r\n                icon: '\uD83D\uDD27',\r\n                retry: true,\r\n                duration: 8000\r\n            },\r\n            [this.errorTypes.UNKNOWN]: {\r\n                title: 'Unexpected Error',\r\n                message: 'An unexpected error occurred. Please try again.',\r\n                icon: '\u2753',\r\n                retry: true,\r\n                duration: 5000\r\n            }\r\n        };\r\n        \r\n        this.retryConfig = {\r\n            maxRetries: 3,\r\n            baseDelay: 1000,\r\n            maxDelay: 10000,\r\n            backoffMultiplier: 2\r\n        };\r\n        \r\n        this.activeErrors = new Map();\r\n        this.retryAttempts = new Map();\r\n        \r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * Initialize error manager\r\n     */\r\n    init() {\r\n        // Skip ALL error handling on landing page\r\n        if (window.location.pathname === '/') {\r\n            console.log('\uD83D\uDD27 CORA Error Manager - Skipped on landing page');\r\n            return;\r\n        }\r\n        \r\n        // Create error container\r\n        this.createErrorContainer();\r\n        \r\n        // Set up global error handlers\r\n        this.setupGlobalHandlers();\r\n        \r\n        // Set up offline detection\r\n        this.setupOfflineDetection();\r\n        \r\n        console.log('\uD83D\uDD27 CORA Error Manager initialized');\r\n    }\r\n\r\n    /**\r\n     * Create error notification container\r\n     */\r\n    createErrorContainer() {\r\n        const container = document.createElement('div');\r\n        container.id = 'cora-error-container';\r\n        container.className = 'cora-error-container';\r\n        container.setAttribute('aria-live', 'polite');\r\n        container.setAttribute('aria-atomic', 'true');\r\n        \r\n        // Add styles\r\n        const style = document.createElement('style');\r\n        style.textContent = `\r\n            .cora-error-container {\r\n                position: fixed;\r\n                top: 20px;\r\n                right: 20px;\r\n                z-index: 10000;\r\n                max-width: 400px;\r\n                pointer-events: none;\r\n            }\r\n            \r\n            .cora-error-notification {\r\n                background: var(--wellness-bg-card);\r\n                border: 2px solid var(--wellness-border-primary);\r\n                border-left: 4px solid var(--wellness-danger);\r\n                border-radius: var(--wellness-radius-lg);\r\n                padding: var(--wellness-space-md);\r\n                margin-bottom: var(--wellness-space-sm);\r\n                box-shadow: var(--wellness-shadow-lg);\r\n                pointer-events: auto;\r\n                transform: translateX(100%);\r\n                opacity: 0;\r\n                transition: all 300ms ease;\r\n                max-width: 100%;\r\n            }\r\n            \r\n            .cora-error-notification.show {\r\n                transform: translateX(0);\r\n                opacity: 1;\r\n            }\r\n            \r\n            .cora-error-notification.hide {\r\n                transform: translateX(100%);\r\n                opacity: 0;\r\n            }\r\n            \r\n            .cora-error-header {\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: space-between;\r\n                margin-bottom: var(--wellness-space-sm);\r\n            }\r\n            \r\n            .cora-error-title {\r\n                font-weight: 600;\r\n                color: var(--wellness-text-primary);\r\n                font-size: var(--wellness-font-size-base);\r\n                display: flex;\r\n                align-items: center;\r\n                gap: var(--wellness-space-sm);\r\n            }\r\n            \r\n            .cora-error-close {\r\n                background: none;\r\n                border: none;\r\n                color: var(--wellness-text-muted);\r\n                cursor: pointer;\r\n                padding: 4px;\r\n                border-radius: var(--wellness-radius-sm);\r\n                transition: all 200ms ease;\r\n                font-size: 18px;\r\n                line-height: 1;\r\n            }\r\n            \r\n            .cora-error-close:hover {\r\n                background: var(--wellness-bg-tertiary);\r\n                color: var(--wellness-text-primary);\r\n            }\r\n            \r\n            .cora-error-message {\r\n                color: var(--wellness-text-secondary);\r\n                font-size: var(--wellness-font-size-sm);\r\n                line-height: 1.5;\r\n                margin-bottom: var(--wellness-space-sm);\r\n            }\r\n            \r\n            .cora-error-actions {\r\n                display: flex;\r\n                gap: var(--wellness-space-sm);\r\n                justify-content: flex-end;\r\n            }\r\n            \r\n            .cora-error-btn {\r\n                padding: var(--wellness-space-xs) var(--wellness-space-sm);\r\n                border: 1px solid var(--wellness-border-primary);\r\n                background: var(--wellness-bg-secondary);\r\n                color: var(--wellness-text-primary);\r\n                border-radius: var(--wellness-radius-sm);\r\n                font-size: var(--wellness-font-size-xs);\r\n                cursor: pointer;\r\n                transition: all 200ms ease;\r\n            }\r\n            \r\n            .cora-error-btn:hover {\r\n                background: var(--wellness-bg-tertiary);\r\n                border-color: var(--wellness-border-secondary);\r\n            }\r\n            \r\n            .cora-error-btn.primary {\r\n                background: var(--wellness-primary);\r\n                color: white;\r\n                border-color: var(--wellness-primary);\r\n            }\r\n            \r\n            .cora-error-btn.primary:hover {\r\n                background: var(--wellness-primary-hover);\r\n            }\r\n            \r\n            .cora-error-progress {\r\n                height: 3px;\r\n                background: var(--wellness-bg-tertiary);\r\n                border-radius: var(--wellness-radius-full);\r\n                overflow: hidden;\r\n                margin-top: var(--wellness-space-sm);\r\n            }\r\n            \r\n            .cora-error-progress-bar {\r\n                height: 100%;\r\n                background: var(--wellness-danger);\r\n                transition: width linear;\r\n            }\r\n            \r\n            @media (max-width: 768px) {\r\n                .cora-error-container {\r\n                    top: 10px;\r\n                    right: 10px;\r\n                    left: 10px;\r\n                    max-width: none;\r\n                }\r\n                \r\n                .cora-error-notification {\r\n                    max-width: none;\r\n                }\r\n            }\r\n        `;\r\n        \r\n        document.head.appendChild(style);\r\n        document.body.appendChild(container);\r\n    }\r\n\r\n    /**\r\n     * Set up global error handlers\r\n     */\r\n    setupGlobalHandlers() {\r\n        // Handle unhandled promise rejections\r\n        window.addEventListener('unhandledrejection', (event) => {\r\n            event.preventDefault();\r\n            // Skip all error popups on landing page\r\n            if (window.location.pathname === '/') {\r\n                console.log('Skipping error popup for landing page');\r\n                return;\r\n            }\r\n            this.handleError(event.reason, this.errorTypes.UNKNOWN);\r\n        });\r\n\r\n        // Handle global errors\r\n        window.addEventListener('error', (event) => {\r\n            event.preventDefault();\r\n            // Skip all error popups on landing page\r\n            if (window.location.pathname === '/') {\r\n                console.log('Skipping error popup for landing page');\r\n                return;\r\n            }\r\n            this.handleError(event.error, this.errorTypes.UNKNOWN);\r\n        });\r\n\r\n        // Handle fetch errors\r\n        this.interceptFetch();\r\n    }\r\n\r\n    /**\r\n     * Intercept fetch requests for error handling\r\n     */\r\n    interceptFetch() {\r\n        // Skip error handling on landing page to prevent popups\r\n        if (window.location.pathname === '/') {\r\n            return;\r\n        }\r\n        \r\n        const originalFetch = window.fetch;\r\n        \r\n        window.fetch = async (...args) => {\r\n            try {\r\n                const response = await originalFetch(...args);\r\n                \r\n                // Handle HTTP errors\r\n                if (!response.ok) {\r\n                    const errorType = this.getErrorTypeFromStatus(response.status);\r\n                    const error = new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n                    error.status = response.status;\r\n                    error.response = response;\r\n                    \r\n                    this.handleError(error, errorType);\r\n                    throw error;\r\n                }\r\n                \r\n                return response;\r\n            } catch (error) {\r\n                // Handle network errors\r\n                if (error.name === 'TypeError' && error.message.includes('fetch')) {\r\n                    this.handleError(error, this.errorTypes.NETWORK);\r\n                } else if (error.name === 'AbortError') {\r\n                    this.handleError(error, this.errorTypes.TIMEOUT);\r\n                } else {\r\n                    this.handleError(error, this.errorTypes.UNKNOWN);\r\n                }\r\n                \r\n                throw error;\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Set up offline detection\r\n     */\r\n    setupOfflineDetection() {\r\n        window.addEventListener('online', () => {\r\n            this.showNotification({\r\n                type: 'success',\r\n                title: 'Connection Restored',\r\n                message: 'You\\'re back online!',\r\n                icon: '\u2705',\r\n                duration: 3000\r\n            });\r\n        });\r\n\r\n        window.addEventListener('offline', () => {\r\n            this.handleError(new Error('No internet connection'), this.errorTypes.NETWORK);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get error type from HTTP status code\r\n     */\r\n    getErrorTypeFromStatus(status) {\r\n        if (status >= 500) return this.errorTypes.SERVER;\r\n        if (status === 401) return this.errorTypes.AUTHENTICATION;\r\n        if (status === 403) return this.errorTypes.AUTHORIZATION;\r\n        if (status === 408 || status === 504) return this.errorTypes.TIMEOUT;\r\n        if (status >= 400) return this.errorTypes.VALIDATION;\r\n        return this.errorTypes.UNKNOWN;\r\n    }\r\n\r\n    /**\r\n     * Handle an error\r\n     */\r\n    handleError(error, type = null) {\r\n        // Skip all error handling on landing page\r\n        if (window.location.pathname === '/') {\r\n            console.log('Skipping error handling on landing page');\r\n            return;\r\n        }\r\n        \r\n        // Determine error type if not provided\r\n        if (!type) {\r\n            type = this.determineErrorType(error);\r\n        }\r\n\r\n        // Get error configuration\r\n        const config = this.errorMessages[type] || this.errorMessages[this.errorTypes.UNKNOWN];\r\n        \r\n        // Create unique error ID\r\n        const errorId = this.generateErrorId();\r\n        \r\n        // Store error information\r\n        this.activeErrors.set(errorId, {\r\n            error,\r\n            type,\r\n            config,\r\n            timestamp: Date.now()\r\n        });\r\n\r\n        // Show error notification\r\n        this.showErrorNotification(errorId, config, error);\r\n\r\n        // Log error for debugging\r\n        this.logError(error, type);\r\n\r\n        // Handle retry logic\r\n        if (config.retry) {\r\n            this.scheduleRetry(errorId, error, type);\r\n        }\r\n\r\n        return errorId;\r\n    }\r\n\r\n    /**\r\n     * Determine error type from error object\r\n     */\r\n    determineErrorType(error) {\r\n        if (error.name === 'NetworkError' || error.message.includes('network')) {\r\n            return this.errorTypes.NETWORK;\r\n        }\r\n        if (error.name === 'TimeoutError' || error.message.includes('timeout')) {\r\n            return this.errorTypes.TIMEOUT;\r\n        }\r\n        if (error.name === 'ValidationError' || error.message.includes('validation')) {\r\n            return this.errorTypes.VALIDATION;\r\n        }\r\n        if (error.status === 401) {\r\n            return this.errorTypes.AUTHENTICATION;\r\n        }\r\n        if (error.status === 403) {\r\n            return this.errorTypes.AUTHORIZATION;\r\n        }\r\n        if (error.status >= 500) {\r\n            return this.errorTypes.SERVER;\r\n        }\r\n        return this.errorTypes.UNKNOWN;\r\n    }\r\n\r\n    /**\r\n     * Show error notification\r\n     */\r\n    showErrorNotification(errorId, config, error) {\r\n        const container = document.getElementById('cora-error-container');\r\n        if (!container) return;\r\n\r\n        const notification = document.createElement('div');\r\n        notification.className = 'cora-error-notification';\r\n        notification.id = `error-${errorId}`;\r\n        notification.setAttribute('role', 'alert');\r\n\r\n        const header = document.createElement('div');\r\n        header.className = 'cora-error-header';\r\n\r\n        const title = document.createElement('div');\r\n        title.className = 'cora-error-title';\r\n        title.innerHTML = `${config.icon} ${config.title}`;\r\n\r\n        const closeBtn = document.createElement('button');\r\n        closeBtn.className = 'cora-error-close';\r\n        closeBtn.innerHTML = '\u00D7';\r\n        closeBtn.setAttribute('aria-label', 'Close error notification');\r\n        closeBtn.onclick = () => this.dismissError(errorId);\r\n\r\n        header.appendChild(title);\r\n        header.appendChild(closeBtn);\r\n\r\n        const message = document.createElement('div');\r\n        message.className = 'cora-error-message';\r\n        message.textContent = config.message;\r\n\r\n        notification.appendChild(header);\r\n        notification.appendChild(message);\r\n\r\n        // Add retry button if applicable\r\n        if (config.retry) {\r\n            const actions = document.createElement('div');\r\n            actions.className = 'cora-error-actions';\r\n\r\n            const retryBtn = document.createElement('button');\r\n            retryBtn.className = 'cora-error-btn primary';\r\n            retryBtn.textContent = 'Retry';\r\n            retryBtn.onclick = () => this.retryError(errorId);\r\n\r\n            actions.appendChild(retryBtn);\r\n            notification.appendChild(actions);\r\n        }\r\n\r\n        // Add progress bar for auto-dismiss\r\n        if (config.duration > 0) {\r\n            const progress = document.createElement('div');\r\n            progress.className = 'cora-error-progress';\r\n            \r\n            const progressBar = document.createElement('div');\r\n            progressBar.className = 'cora-error-progress-bar';\r\n            progressBar.style.width = '100%';\r\n            \r\n            progress.appendChild(progressBar);\r\n            notification.appendChild(progress);\r\n\r\n            // Animate progress bar\r\n            setTimeout(() => {\r\n                progressBar.style.width = '0%';\r\n            }, 100);\r\n\r\n            // Auto-dismiss\r\n            setTimeout(() => {\r\n                this.dismissError(errorId);\r\n            }, config.duration);\r\n        }\r\n\r\n        container.appendChild(notification);\r\n\r\n        // Animate in\r\n        setTimeout(() => {\r\n            notification.classList.add('show');\r\n        }, 100);\r\n    }\r\n\r\n    /**\r\n     * Show success notification\r\n     */\r\n    showNotification({ type, title, message, icon, duration = 5000 }) {\r\n        const container = document.getElementById('cora-error-container');\r\n        if (!container) return;\r\n\r\n        const notification = document.createElement('div');\r\n        notification.className = 'cora-error-notification';\r\n        notification.style.borderLeftColor = type === 'success' ? 'var(--wellness-success)' : 'var(--wellness-primary)';\r\n        notification.setAttribute('role', 'status');\r\n\r\n        const header = document.createElement('div');\r\n        header.className = 'cora-error-header';\r\n\r\n        const titleEl = document.createElement('div');\r\n        titleEl.className = 'cora-error-title';\r\n        titleEl.innerHTML = `${icon} ${title}`;\r\n\r\n        const closeBtn = document.createElement('button');\r\n        closeBtn.className = 'cora-error-close';\r\n        closeBtn.innerHTML = '\u00D7';\r\n        closeBtn.setAttribute('aria-label', 'Close notification');\r\n        closeBtn.onclick = () => notification.remove();\r\n\r\n        header.appendChild(titleEl);\r\n        header.appendChild(closeBtn);\r\n\r\n        const messageEl = document.createElement('div');\r\n        messageEl.className = 'cora-error-message';\r\n        messageEl.textContent = message;\r\n\r\n        notification.appendChild(header);\r\n        notification.appendChild(messageEl);\r\n\r\n        container.appendChild(notification);\r\n\r\n        // Animate in\r\n        setTimeout(() => {\r\n            notification.classList.add('show');\r\n        }, 100);\r\n\r\n        // Auto-dismiss\r\n        if (duration > 0) {\r\n            setTimeout(() => {\r\n                notification.classList.add('hide');\r\n                setTimeout(() => notification.remove(), 300);\r\n            }, duration);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Dismiss error notification\r\n     */\r\n    dismissError(errorId) {\r\n        const notification = document.getElementById(`error-${errorId}`);\r\n        if (notification) {\r\n            notification.classList.add('hide');\r\n            setTimeout(() => {\r\n                notification.remove();\r\n                this.activeErrors.delete(errorId);\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Schedule retry for an error\r\n     */\r\n    scheduleRetry(errorId, error, type) {\r\n        const attempts = this.retryAttempts.get(errorId) || 0;\r\n        \r\n        if (attempts >= this.retryConfig.maxRetries) {\r\n            return;\r\n        }\r\n\r\n        const delay = Math.min(\r\n            this.retryConfig.baseDelay * Math.pow(this.retryConfig.backoffMultiplier, attempts),\r\n            this.retryConfig.maxDelay\r\n        );\r\n\r\n        setTimeout(() => {\r\n            this.retryError(errorId);\r\n        }, delay);\r\n    }\r\n\r\n    /**\r\n     * Retry an error\r\n     */\r\n    retryError(errorId) {\r\n        const errorInfo = this.activeErrors.get(errorId);\r\n        if (!errorInfo) return;\r\n\r\n        const attempts = this.retryAttempts.get(errorId) || 0;\r\n        this.retryAttempts.set(errorId, attempts + 1);\r\n\r\n        // Dismiss current notification\r\n        this.dismissError(errorId);\r\n\r\n        // Show retry notification\r\n        this.showNotification({\r\n            type: 'info',\r\n            title: 'Retrying...',\r\n            message: `Attempt ${attempts + 1} of ${this.retryConfig.maxRetries}`,\r\n            icon: '\uD83D\uDD04',\r\n            duration: 2000\r\n        });\r\n\r\n        // Re-throw the error to trigger retry\r\n        setTimeout(() => {\r\n            this.handleError(errorInfo.error, errorInfo.type);\r\n        }, 1000);\r\n    }\r\n\r\n    /**\r\n     * Generate unique error ID\r\n     */\r\n    generateErrorId() {\r\n        return `error_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    }\r\n\r\n    /**\r\n     * Log error for debugging\r\n     */\r\n    logError(error, type) {\r\n        console.error(`[CORA Error] Type: ${type}`, error);\r\n        \r\n        // Send to analytics if available\r\n        if (window.coraAnalytics && typeof window.coraAnalytics.track === 'function') {\r\n            window.coraAnalytics.track('error_occurred', {\r\n                type,\r\n                message: error.message,\r\n                stack: error.stack,\r\n                timestamp: Date.now()\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear all errors\r\n     */\r\n    clearAllErrors() {\r\n        this.activeErrors.clear();\r\n        this.retryAttempts.clear();\r\n        \r\n        const container = document.getElementById('cora-error-container');\r\n        if (container) {\r\n            container.innerHTML = '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get error statistics\r\n     */\r\n    getErrorStats() {\r\n        const stats = {\r\n            totalErrors: this.activeErrors.size,\r\n            errorTypes: {},\r\n            retryAttempts: this.retryAttempts.size\r\n        };\r\n\r\n        for (const [_, errorInfo] of this.activeErrors) {\r\n            const type = errorInfo.type;\r\n            stats.errorTypes[type] = (stats.errorTypes[type] || 0) + 1;\r\n        }\r\n\r\n        return stats;\r\n    }\r\n}\r\n\r\n// Initialize error manager only if not on landing page\r\nlet errorManager;\r\nif (window.location.pathname !== '/') {\r\n    errorManager = new ErrorManager();\r\n    window.errorManager = errorManager;\r\n} else {\r\n    // Create a dummy error manager for landing page\r\n    errorManager = {\r\n        handleError: () => {},\r\n        showNotification: () => {},\r\n        clearAllErrors: () => {},\r\n        getErrorStats: () => ({ totalErrors: 0, errorTypes: {}, retryAttempts: 0 })\r\n    };\r\n    window.errorManager = errorManager;\r\n    console.log('\uD83D\uDD27 CORA Error Manager - Disabled on landing page');\r\n}\r\n\r\n// Export for use in other modules\r\nwindow.ErrorManager = ErrorManager;\r\n\r\n// Console helpers for debugging\r\nif (typeof console !== 'undefined' && window.location.pathname !== '/') {\r\n    console.log('\uD83D\uDD27 CORA Error Manager initialized');\r\n    console.log('Available commands:');\r\n    console.log('- errorManager.handleError(error, type)');\r\n    console.log('- errorManager.showNotification(config)');\r\n    console.log('- errorManager.clearAllErrors()');\r\n    console.log('- errorManager.getErrorStats()');\r\n} "],
  "mappings": "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",
  "names": ["ErrorManager", "container", "style", "event", "originalFetch", "args", "response", "errorType", "error", "status", "type", "config", "errorId", "notification", "header", "title", "closeBtn", "message", "actions", "retryBtn", "progress", "progressBar", "icon", "duration", "titleEl", "messageEl", "attempts", "delay", "errorInfo", "stats", "_", "errorManager"]
}
