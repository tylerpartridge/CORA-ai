{
  "version": 3,
  "sources": ["../timeout-handler.js"],
  "sourcesContent": ["/**\r\n * CORA Timeout Handler\r\n * Manages request timeouts with user feedback and retry mechanisms\r\n * Enhanced for performance and user experience\r\n */\r\n\r\nclass TimeoutHandler {\r\n    constructor() {\r\n        this.defaultTimeout = 30000; // 30 seconds\r\n        this.timeoutConfig = {\r\n            short: 5000,    // 5 seconds for quick operations\r\n            medium: 15000,  // 15 seconds for normal operations\r\n            long: 30000,    // 30 seconds for complex operations\r\n            upload: 60000   // 60 seconds for file uploads\r\n        };\r\n        \r\n        this.activeRequests = new Map();\r\n        this.retryConfig = {\r\n            maxRetries: 3,\r\n            baseDelay: 1000,\r\n            maxDelay: 10000,\r\n            backoffMultiplier: 2\r\n        };\r\n        \r\n        this.timeoutIndicators = new Map();\r\n        \r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * Initialize timeout handler\r\n     */\r\n    init() {\r\n        // Skip ALL timeout handling on landing page\r\n        if (window.location.pathname === '/') {\r\n            console.log('\u23F1\uFE0F CORA Timeout Handler - Skipped on landing page');\r\n            return;\r\n        }\r\n        \r\n        // Create timeout indicator container\r\n        this.createTimeoutContainer();\r\n        \r\n        // Set up global timeout handling\r\n        this.setupGlobalHandlers();\r\n        \r\n        console.log('\u23F1\uFE0F CORA Timeout Handler initialized');\r\n    }\r\n\r\n    /**\r\n     * Create timeout indicator container\r\n     */\r\n    createTimeoutContainer() {\r\n        const container = document.createElement('div');\r\n        container.id = 'cora-timeout-container';\r\n        container.className = 'cora-timeout-container';\r\n        container.setAttribute('aria-live', 'polite');\r\n        \r\n        // Add styles\r\n        const style = document.createElement('style');\r\n        style.textContent = `\r\n            .cora-timeout-container {\r\n                position: fixed;\r\n                top: 50%;\r\n                left: 50%;\r\n                transform: translate(-50%, -50%);\r\n                z-index: 10001;\r\n                pointer-events: none;\r\n            }\r\n            \r\n            .cora-timeout-indicator {\r\n                background: var(--wellness-bg-card);\r\n                border: 2px solid var(--wellness-border-primary);\r\n                border-radius: var(--wellness-radius-lg);\r\n                padding: var(--wellness-space-lg);\r\n                box-shadow: var(--wellness-shadow-xl);\r\n                pointer-events: auto;\r\n                text-align: center;\r\n                min-width: 300px;\r\n                max-width: 400px;\r\n                transform: scale(0.8);\r\n                opacity: 0;\r\n                transition: all 300ms ease;\r\n            }\r\n            \r\n            .cora-timeout-indicator.show {\r\n                transform: scale(1);\r\n                opacity: 1;\r\n            }\r\n            \r\n            .cora-timeout-indicator.hide {\r\n                transform: scale(0.8);\r\n                opacity: 0;\r\n            }\r\n            \r\n            .cora-timeout-icon {\r\n                font-size: 2rem;\r\n                margin-bottom: var(--wellness-space-md);\r\n                animation: pulse 2s ease-in-out infinite;\r\n            }\r\n            \r\n            .cora-timeout-title {\r\n                font-weight: 600;\r\n                color: var(--wellness-text-primary);\r\n                font-size: var(--wellness-font-size-lg);\r\n                margin-bottom: var(--wellness-space-sm);\r\n            }\r\n            \r\n            .cora-timeout-message {\r\n                color: var(--wellness-text-secondary);\r\n                font-size: var(--wellness-font-size-base);\r\n                line-height: 1.5;\r\n                margin-bottom: var(--wellness-space-lg);\r\n            }\r\n            \r\n            .cora-timeout-progress {\r\n                width: 100%;\r\n                height: 6px;\r\n                background: var(--wellness-bg-tertiary);\r\n                border-radius: var(--wellness-radius-full);\r\n                overflow: hidden;\r\n                margin-bottom: var(--wellness-space-md);\r\n            }\r\n            \r\n            .cora-timeout-progress-bar {\r\n                height: 100%;\r\n                background: linear-gradient(90deg, var(--wellness-primary), var(--wellness-peace));\r\n                border-radius: var(--wellness-radius-full);\r\n                transition: width linear;\r\n                position: relative;\r\n            }\r\n            \r\n            .cora-timeout-progress-bar::after {\r\n                content: '';\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                background: linear-gradient(90deg, \r\n                    transparent 0%, \r\n                    rgba(255, 255, 255, 0.3) 50%, \r\n                    transparent 100%);\r\n                animation: shimmer 2s ease-in-out infinite;\r\n            }\r\n            \r\n            .cora-timeout-actions {\r\n                display: flex;\r\n                gap: var(--wellness-space-sm);\r\n                justify-content: center;\r\n            }\r\n            \r\n            .cora-timeout-btn {\r\n                padding: var(--wellness-space-sm) var(--wellness-space-md);\r\n                border: 1px solid var(--wellness-border-primary);\r\n                background: var(--wellness-bg-secondary);\r\n                color: var(--wellness-text-primary);\r\n                border-radius: var(--wellness-radius-md);\r\n                font-size: var(--wellness-font-size-sm);\r\n                cursor: pointer;\r\n                transition: all 200ms ease;\r\n            }\r\n            \r\n            .cora-timeout-btn:hover {\r\n                background: var(--wellness-bg-tertiary);\r\n                border-color: var(--wellness-border-secondary);\r\n            }\r\n            \r\n            .cora-timeout-btn.primary {\r\n                background: var(--wellness-primary);\r\n                color: white;\r\n                border-color: var(--wellness-primary);\r\n            }\r\n            \r\n            .cora-timeout-btn.primary:hover {\r\n                background: var(--wellness-primary-hover);\r\n            }\r\n            \r\n            .cora-timeout-time {\r\n                font-size: var(--wellness-font-size-sm);\r\n                color: var(--wellness-text-muted);\r\n                margin-top: var(--wellness-space-sm);\r\n            }\r\n            \r\n            @keyframes pulse {\r\n                0%, 100% { transform: scale(1); }\r\n                50% { transform: scale(1.1); }\r\n            }\r\n            \r\n            @keyframes shimmer {\r\n                0% { transform: translateX(-100%); }\r\n                100% { transform: translateX(100%); }\r\n            }\r\n            \r\n            @media (max-width: 768px) {\r\n                .cora-timeout-indicator {\r\n                    min-width: 280px;\r\n                    margin: 0 var(--wellness-space-md);\r\n                }\r\n            }\r\n        `;\r\n        \r\n        document.head.appendChild(style);\r\n        document.body.appendChild(container);\r\n    }\r\n\r\n    /**\r\n     * Set up global timeout handling\r\n     */\r\n    setupGlobalHandlers() {\r\n        // Intercept fetch requests for timeout handling\r\n        this.interceptFetch();\r\n        \r\n        // Handle page visibility changes\r\n        document.addEventListener('visibilitychange', () => {\r\n            if (document.hidden) {\r\n                this.pauseActiveTimeouts();\r\n            } else {\r\n                this.resumeActiveTimeouts();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Intercept fetch requests for timeout handling\r\n     */\r\n    interceptFetch() {\r\n        // Skip timeout handling on landing page to prevent errors\r\n        if (window.location.pathname === '/') {\r\n            return;\r\n        }\r\n        \r\n        const originalFetch = window.fetch;\r\n        \r\n        window.fetch = async (...args) => {\r\n            const [url, options = {}] = args;\r\n            const timeout = options.timeout || this.defaultTimeout;\r\n            \r\n            // Create abort controller for timeout\r\n            const controller = new AbortController();\r\n            const timeoutId = setTimeout(() => {\r\n                controller.abort();\r\n            }, timeout);\r\n            \r\n            // Add signal to options\r\n            const fetchOptions = {\r\n                ...options,\r\n                signal: controller.signal\r\n            };\r\n            \r\n            // Create request ID\r\n            const requestId = this.generateRequestId();\r\n            \r\n            // Show timeout indicator\r\n            this.showTimeoutIndicator(requestId, timeout);\r\n            \r\n            try {\r\n                const response = await originalFetch(url, fetchOptions);\r\n                clearTimeout(timeoutId);\r\n                this.hideTimeoutIndicator(requestId);\r\n                return response;\r\n            } catch (error) {\r\n                clearTimeout(timeoutId);\r\n                this.hideTimeoutIndicator(requestId);\r\n                \r\n                if (error.name === 'AbortError') {\r\n                    this.handleTimeout(requestId, url, timeout);\r\n                }\r\n                \r\n                throw error;\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Show timeout indicator\r\n     */\r\n    showTimeoutIndicator(requestId, timeout) {\r\n        const container = document.getElementById('cora-timeout-container');\r\n        if (!container) return;\r\n\r\n        const indicator = document.createElement('div');\r\n        indicator.className = 'cora-timeout-indicator';\r\n        indicator.id = `timeout-${requestId}`;\r\n\r\n        const icon = document.createElement('div');\r\n        icon.className = 'cora-timeout-icon';\r\n        icon.innerHTML = '\u23F1\uFE0F';\r\n\r\n        const title = document.createElement('div');\r\n        title.className = 'cora-timeout-title';\r\n        title.textContent = 'Processing Request';\r\n\r\n        const message = document.createElement('div');\r\n        message.className = 'cora-timeout-message';\r\n        message.textContent = 'Please wait while we process your request...';\r\n\r\n        const progress = document.createElement('div');\r\n        progress.className = 'cora-timeout-progress';\r\n        \r\n        const progressBar = document.createElement('div');\r\n        progressBar.className = 'cora-timeout-progress-bar';\r\n        progressBar.style.width = '100%';\r\n        \r\n        progress.appendChild(progressBar);\r\n\r\n        const time = document.createElement('div');\r\n        time.className = 'cora-timeout-time';\r\n        time.textContent = `Timeout: ${timeout / 1000}s`;\r\n\r\n        indicator.appendChild(icon);\r\n        indicator.appendChild(title);\r\n        indicator.appendChild(message);\r\n        indicator.appendChild(progress);\r\n        indicator.appendChild(time);\r\n\r\n        container.appendChild(indicator);\r\n\r\n        // Animate in\r\n        setTimeout(() => {\r\n            indicator.classList.add('show');\r\n        }, 100);\r\n\r\n        // Animate progress bar\r\n        setTimeout(() => {\r\n            progressBar.style.width = '0%';\r\n        }, 100);\r\n\r\n        // Store indicator reference\r\n        this.timeoutIndicators.set(requestId, {\r\n            element: indicator,\r\n            startTime: Date.now(),\r\n            timeout: timeout,\r\n            progressBar: progressBar\r\n        });\r\n\r\n        // Update progress\r\n        this.updateProgress(requestId);\r\n    }\r\n\r\n    /**\r\n     * Update progress bar\r\n     */\r\n    updateProgress(requestId) {\r\n        const indicator = this.timeoutIndicators.get(requestId);\r\n        if (!indicator) return;\r\n\r\n        const elapsed = Date.now() - indicator.startTime;\r\n        const progress = Math.max(0, 100 - (elapsed / indicator.timeout) * 100);\r\n        \r\n        if (indicator.progressBar) {\r\n            indicator.progressBar.style.width = `${progress}%`;\r\n        }\r\n\r\n        // Continue updating if not complete\r\n        if (progress > 0) {\r\n            requestAnimationFrame(() => this.updateProgress(requestId));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Hide timeout indicator\r\n     */\r\n    hideTimeoutIndicator(requestId) {\r\n        const indicator = this.timeoutIndicators.get(requestId);\r\n        if (!indicator) return;\r\n\r\n        indicator.element.classList.add('hide');\r\n        setTimeout(() => {\r\n            indicator.element.remove();\r\n            this.timeoutIndicators.delete(requestId);\r\n        }, 300);\r\n    }\r\n\r\n    /**\r\n     * Handle timeout\r\n     */\r\n    handleTimeout(requestId, url, timeout) {\r\n        const indicator = this.timeoutIndicators.get(requestId);\r\n        if (!indicator) return;\r\n\r\n        // Update indicator for timeout\r\n        const title = indicator.element.querySelector('.cora-timeout-title');\r\n        const message = indicator.element.querySelector('.cora-timeout-message');\r\n        const icon = indicator.element.querySelector('.cora-timeout-icon');\r\n        const actions = indicator.element.querySelector('.cora-timeout-actions');\r\n\r\n        if (title) title.textContent = 'Request Timeout';\r\n        if (message) message.textContent = 'The request took too long to complete. Would you like to retry?';\r\n        if (icon) icon.innerHTML = '\u23F0';\r\n\r\n        // Add retry button\r\n        if (!actions) {\r\n            const actionsDiv = document.createElement('div');\r\n            actionsDiv.className = 'cora-timeout-actions';\r\n\r\n            const retryBtn = document.createElement('button');\r\n            retryBtn.className = 'cora-timeout-btn primary';\r\n            retryBtn.textContent = 'Retry';\r\n            retryBtn.onclick = () => this.retryRequest(requestId, url, timeout);\r\n\r\n            const cancelBtn = document.createElement('button');\r\n            cancelBtn.className = 'cora-timeout-btn';\r\n            cancelBtn.textContent = 'Cancel';\r\n            cancelBtn.onclick = () => this.hideTimeoutIndicator(requestId);\r\n\r\n            actionsDiv.appendChild(retryBtn);\r\n            actionsDiv.appendChild(cancelBtn);\r\n            indicator.element.appendChild(actionsDiv);\r\n        }\r\n\r\n        // Log timeout\r\n        console.warn(`[CORA Timeout] Request timed out after ${timeout}ms:`, url);\r\n    }\r\n\r\n    /**\r\n     * Retry request\r\n     */\r\n    retryRequest(requestId, url, timeout) {\r\n        // Hide current indicator\r\n        this.hideTimeoutIndicator(requestId);\r\n\r\n        // Show retry notification\r\n        if (window.errorManager) {\r\n            window.errorManager.showNotification({\r\n                type: 'info',\r\n                title: 'Retrying Request',\r\n                message: 'Attempting to retry the request...',\r\n                icon: '\uD83D\uDD04',\r\n                duration: 2000\r\n            });\r\n        }\r\n\r\n        // Retry the request\r\n        setTimeout(() => {\r\n            fetch(url, { timeout: timeout * 1.5 }); // Increase timeout for retry\r\n        }, 1000);\r\n    }\r\n\r\n    /**\r\n     * Pause active timeouts when page is hidden\r\n     */\r\n    pauseActiveTimeouts() {\r\n        for (const [requestId, indicator] of this.timeoutIndicators) {\r\n            indicator.paused = true;\r\n            indicator.pauseTime = Date.now();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resume active timeouts when page is visible\r\n     */\r\n    resumeActiveTimeouts() {\r\n        for (const [requestId, indicator] of this.timeoutIndicators) {\r\n            if (indicator.paused) {\r\n                const pauseDuration = Date.now() - indicator.pauseTime;\r\n                indicator.startTime += pauseDuration;\r\n                indicator.paused = false;\r\n                delete indicator.pauseTime;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a fetch wrapper with timeout\r\n     */\r\n    fetchWithTimeout(url, options = {}) {\r\n        const timeout = options.timeout || this.defaultTimeout;\r\n        const controller = new AbortController();\r\n        \r\n        const timeoutId = setTimeout(() => {\r\n            controller.abort();\r\n        }, timeout);\r\n        \r\n        const fetchOptions = {\r\n            ...options,\r\n            signal: controller.signal\r\n        };\r\n        \r\n        return fetch(url, fetchOptions).finally(() => {\r\n            clearTimeout(timeoutId);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set timeout for a specific request type\r\n     */\r\n    setTimeout(type, duration) {\r\n        if (this.timeoutConfig.hasOwnProperty(type)) {\r\n            this.timeoutConfig[type] = duration;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get timeout for a specific request type\r\n     */\r\n    getTimeout(type) {\r\n        return this.timeoutConfig[type] || this.defaultTimeout;\r\n    }\r\n\r\n    /**\r\n     * Clear all active timeouts\r\n     */\r\n    clearAllTimeouts() {\r\n        for (const [requestId, indicator] of this.timeoutIndicators) {\r\n            this.hideTimeoutIndicator(requestId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generate unique request ID\r\n     */\r\n    generateRequestId() {\r\n        return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    }\r\n\r\n    /**\r\n     * Get timeout statistics\r\n     */\r\n    getTimeoutStats() {\r\n        return {\r\n            activeTimeouts: this.timeoutIndicators.size,\r\n            timeoutConfig: this.timeoutConfig,\r\n            retryConfig: this.retryConfig\r\n        };\r\n    }\r\n}\r\n\r\n// Initialize timeout handler only if not on landing page\r\nlet timeoutHandler;\r\nif (window.location.pathname !== '/') {\r\n    timeoutHandler = new TimeoutHandler();\r\n    window.timeoutHandler = timeoutHandler;\r\n} else {\r\n    // Create a dummy timeout handler for landing page\r\n    timeoutHandler = {\r\n        fetchWithTimeout: fetch,\r\n        setTimeout: () => {},\r\n        getTimeout: () => 30000,\r\n        clearAllTimeouts: () => {},\r\n        getTimeoutStats: () => ({ activeTimeouts: 0, timeoutConfig: {}, retryConfig: {} })\r\n    };\r\n    window.timeoutHandler = timeoutHandler;\r\n    console.log('\u23F1\uFE0F CORA Timeout Handler - Disabled on landing page');\r\n}\r\n\r\n// Export for use in other modules\r\nwindow.TimeoutHandler = TimeoutHandler;\r\n\r\n// Console helpers for debugging\r\nif (typeof console !== 'undefined' && window.location.pathname !== '/') {\r\n    console.log('\u23F1\uFE0F CORA Timeout Handler initialized');\r\n    console.log('Available commands:');\r\n    console.log('- timeoutHandler.fetchWithTimeout(url, options)');\r\n    console.log('- timeoutHandler.setTimeout(type, duration)');\r\n    console.log('- timeoutHandler.clearAllTimeouts()');\r\n    console.log('- timeoutHandler.getTimeoutStats()');\r\n} "],
  "mappings": "AAMA,IAAMA,EAAN,KAAqB,CACjB,aAAc,CACV,KAAK,eAAiB,IACtB,KAAK,cAAgB,CACjB,MAAO,IACP,OAAQ,KACR,KAAM,IACN,OAAQ,GACZ,EAEA,KAAK,eAAiB,IAAI,IAC1B,KAAK,YAAc,CACf,WAAY,EACZ,UAAW,IACX,SAAU,IACV,kBAAmB,CACvB,EAEA,KAAK,kBAAoB,IAAI,IAE7B,KAAK,KAAK,CACd,CAKA,MAAO,CAEH,GAAI,OAAO,SAAS,WAAa,IAAK,CAClC,QAAQ,IAAI,6DAAmD,EAC/D,MACJ,CAGA,KAAK,uBAAuB,EAG5B,KAAK,oBAAoB,EAEzB,QAAQ,IAAI,+CAAqC,CACrD,CAKA,wBAAyB,CACrB,IAAMC,EAAY,SAAS,cAAc,KAAK,EAC9CA,EAAU,GAAK,yBACfA,EAAU,UAAY,yBACtBA,EAAU,aAAa,YAAa,QAAQ,EAG5C,IAAMC,EAAQ,SAAS,cAAc,OAAO,EAC5CA,EAAM,YAAcpB,SAAS,KAAK,YAAYA,CAAK,EAC/B,SAAS,KAAK,YAAYD,CAAS,CACvC,CAKA,qBAAsB,CAElB,KAAK,eAAe,EAGpB,SAAS,iBAAiB,mBAAoB,IAAM,CAC5C,SAAS,OACT,KAAK,oBAAoB,EAEzB,KAAK,qBAAqB,CAElC,CAAC,CACL,CAKA,gBAAiB,CAEb,GAAI,OAAO,SAAS,WAAa,IAC7B,OAGJ,IAAME,EAAgB,OAAO,MAE7B,OAAO,MAAQ,SAAUC,IAAS,CAC9B,GAAM,CAACC,EAAKC,EAAU,CAAC,CAAC,EAAIF,EACtBG,EAAUD,EAAQ,SAAW,KAAK,eAGlCE,EAAa,IAAI,gBACjBC,EAAY,WAAW,IAAM,CAC/BD,EAAW,MAAM,CACrB,EAAGD,CAAO,EAGJG,EAAe,CACjB,GAAGJ,EACH,OAAQE,EAAW,MACvB,EAGMG,EAAY,KAAK,kBAAkB,EAGzC,KAAK,qBAAqBA,EAAWJ,CAAO,EAE5C,GAAI,CACA,IAAMK,EAAW,MAAMT,EAAcE,EAAKK,CAAY,EACtD,oBAAaD,CAAS,EACtB,KAAK,qBAAqBE,CAAS,EAC5BC,CACX,OAASC,EAAO,CACZ,mBAAaJ,CAAS,EACtB,KAAK,qBAAqBE,CAAS,EAE/BE,EAAM,OAAS,cACf,KAAK,cAAcF,EAAWN,EAAKE,CAAO,EAGxCM,CACV,CACJ,CACJ,CAKA,qBAAqBF,EAAWJ,EAAS,CACrC,IAAMN,EAAY,SAAS,eAAe,wBAAwB,EAClE,GAAI,CAACA,EAAW,OAEhB,IAAMa,EAAY,SAAS,cAAc,KAAK,EAC9CA,EAAU,UAAY,yBACtBA,EAAU,GAAK,WAAWH,CAAS,GAEnC,IAAMI,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAY,oBACjBA,EAAK,UAAY,eAEjB,IAAMC,EAAQ,SAAS,cAAc,KAAK,EAC1CA,EAAM,UAAY,qBAClBA,EAAM,YAAc,qBAEpB,IAAMC,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAY,uBACpBA,EAAQ,YAAc,+CAEtB,IAAMC,EAAW,SAAS,cAAc,KAAK,EAC7CA,EAAS,UAAY,wBAErB,IAAMC,EAAc,SAAS,cAAc,KAAK,EAChDA,EAAY,UAAY,4BACxBA,EAAY,MAAM,MAAQ,OAE1BD,EAAS,YAAYC,CAAW,EAEhC,IAAMC,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAY,oBACjBA,EAAK,YAAc,YAAYb,EAAU,GAAI,IAE7CO,EAAU,YAAYC,CAAI,EAC1BD,EAAU,YAAYE,CAAK,EAC3BF,EAAU,YAAYG,CAAO,EAC7BH,EAAU,YAAYI,CAAQ,EAC9BJ,EAAU,YAAYM,CAAI,EAE1BnB,EAAU,YAAYa,CAAS,EAG/B,WAAW,IAAM,CACbA,EAAU,UAAU,IAAI,MAAM,CAClC,EAAG,GAAG,EAGN,WAAW,IAAM,CACbK,EAAY,MAAM,MAAQ,IAC9B,EAAG,GAAG,EAGN,KAAK,kBAAkB,IAAIR,EAAW,CAClC,QAASG,EACT,UAAW,KAAK,IAAI,EACpB,QAASP,EACT,YAAaY,CACjB,CAAC,EAGD,KAAK,eAAeR,CAAS,CACjC,CAKA,eAAeA,EAAW,CACtB,IAAMG,EAAY,KAAK,kBAAkB,IAAIH,CAAS,EACtD,GAAI,CAACG,EAAW,OAEhB,IAAMO,EAAU,KAAK,IAAI,EAAIP,EAAU,UACjCI,EAAW,KAAK,IAAI,EAAG,IAAOG,EAAUP,EAAU,QAAW,GAAG,EAElEA,EAAU,cACVA,EAAU,YAAY,MAAM,MAAQ,GAAGI,CAAQ,KAI/CA,EAAW,GACX,sBAAsB,IAAM,KAAK,eAAeP,CAAS,CAAC,CAElE,CAKA,qBAAqBA,EAAW,CAC5B,IAAMG,EAAY,KAAK,kBAAkB,IAAIH,CAAS,EACjDG,IAELA,EAAU,QAAQ,UAAU,IAAI,MAAM,EACtC,WAAW,IAAM,CACbA,EAAU,QAAQ,OAAO,EACzB,KAAK,kBAAkB,OAAOH,CAAS,CAC3C,EAAG,GAAG,EACV,CAKA,cAAcA,EAAWN,EAAKE,EAAS,CACnC,IAAMO,EAAY,KAAK,kBAAkB,IAAIH,CAAS,EACtD,GAAI,CAACG,EAAW,OAGhB,IAAME,EAAQF,EAAU,QAAQ,cAAc,qBAAqB,EAC7DG,EAAUH,EAAU,QAAQ,cAAc,uBAAuB,EACjEC,EAAOD,EAAU,QAAQ,cAAc,oBAAoB,EAC3DQ,EAAUR,EAAU,QAAQ,cAAc,uBAAuB,EAOvE,GALIE,IAAOA,EAAM,YAAc,mBAC3BC,IAASA,EAAQ,YAAc,mEAC/BF,IAAMA,EAAK,UAAY,UAGvB,CAACO,EAAS,CACV,IAAMC,EAAa,SAAS,cAAc,KAAK,EAC/CA,EAAW,UAAY,uBAEvB,IAAMC,EAAW,SAAS,cAAc,QAAQ,EAChDA,EAAS,UAAY,2BACrBA,EAAS,YAAc,QACvBA,EAAS,QAAU,IAAM,KAAK,aAAab,EAAWN,EAAKE,CAAO,EAElE,IAAMkB,EAAY,SAAS,cAAc,QAAQ,EACjDA,EAAU,UAAY,mBACtBA,EAAU,YAAc,SACxBA,EAAU,QAAU,IAAM,KAAK,qBAAqBd,CAAS,EAE7DY,EAAW,YAAYC,CAAQ,EAC/BD,EAAW,YAAYE,CAAS,EAChCX,EAAU,QAAQ,YAAYS,CAAU,CAC5C,CAGA,QAAQ,KAAK,0CAA0ChB,CAAO,MAAOF,CAAG,CAC5E,CAKA,aAAaM,EAAWN,EAAKE,EAAS,CAElC,KAAK,qBAAqBI,CAAS,EAG/B,OAAO,cACP,OAAO,aAAa,iBAAiB,CACjC,KAAM,OACN,MAAO,mBACP,QAAS,qCACT,KAAM,YACN,SAAU,GACd,CAAC,EAIL,WAAW,IAAM,CACb,MAAMN,EAAK,CAAE,QAASE,EAAU,GAAI,CAAC,CACzC,EAAG,GAAI,CACX,CAKA,qBAAsB,CAClB,OAAW,CAACI,EAAWG,CAAS,IAAK,KAAK,kBACtCA,EAAU,OAAS,GACnBA,EAAU,UAAY,KAAK,IAAI,CAEvC,CAKA,sBAAuB,CACnB,OAAW,CAACH,EAAWG,CAAS,IAAK,KAAK,kBACtC,GAAIA,EAAU,OAAQ,CAClB,IAAMY,EAAgB,KAAK,IAAI,EAAIZ,EAAU,UAC7CA,EAAU,WAAaY,EACvBZ,EAAU,OAAS,GACnB,OAAOA,EAAU,SACrB,CAER,CAKA,iBAAiBT,EAAKC,EAAU,CAAC,EAAG,CAChC,IAAMC,EAAUD,EAAQ,SAAW,KAAK,eAClCE,EAAa,IAAI,gBAEjBC,EAAY,WAAW,IAAM,CAC/BD,EAAW,MAAM,CACrB,EAAGD,CAAO,EAEJG,EAAe,CACjB,GAAGJ,EACH,OAAQE,EAAW,MACvB,EAEA,OAAO,MAAMH,EAAKK,CAAY,EAAE,QAAQ,IAAM,CAC1C,aAAaD,CAAS,CAC1B,CAAC,CACL,CAKA,WAAWkB,EAAMC,EAAU,CACnB,KAAK,cAAc,eAAeD,CAAI,IACtC,KAAK,cAAcA,CAAI,EAAIC,EAEnC,CAKA,WAAWD,EAAM,CACb,OAAO,KAAK,cAAcA,CAAI,GAAK,KAAK,cAC5C,CAKA,kBAAmB,CACf,OAAW,CAAChB,EAAWG,CAAS,IAAK,KAAK,kBACtC,KAAK,qBAAqBH,CAAS,CAE3C,CAKA,mBAAoB,CAChB,MAAO,OAAO,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,CAAC,EACvE,CAKA,iBAAkB,CACd,MAAO,CACH,eAAgB,KAAK,kBAAkB,KACvC,cAAe,KAAK,cACpB,YAAa,KAAK,WACtB,CACJ,CACJ,EAGIkB,EACA,OAAO,SAAS,WAAa,KAC7BA,EAAiB,IAAI7B,EACrB,OAAO,eAAiB6B,IAGxBA,EAAiB,CACb,iBAAkB,MAClB,WAAY,IAAM,CAAC,EACnB,WAAY,IAAM,IAClB,iBAAkB,IAAM,CAAC,EACzB,gBAAiB,KAAO,CAAE,eAAgB,EAAG,cAAe,CAAC,EAAG,YAAa,CAAC,CAAE,EACpF,EACA,OAAO,eAAiBA,EACxB,QAAQ,IAAI,8DAAoD,GAIpE,OAAO,eAAiB7B,EAGpB,OAAO,SAAY,aAAe,OAAO,SAAS,WAAa,MAC/D,QAAQ,IAAI,+CAAqC,EACjD,QAAQ,IAAI,qBAAqB,EACjC,QAAQ,IAAI,iDAAiD,EAC7D,QAAQ,IAAI,6CAA6C,EACzD,QAAQ,IAAI,qCAAqC,EACjD,QAAQ,IAAI,oCAAoC",
  "names": ["TimeoutHandler", "container", "style", "originalFetch", "args", "url", "options", "timeout", "controller", "timeoutId", "fetchOptions", "requestId", "response", "error", "indicator", "icon", "title", "message", "progress", "progressBar", "time", "elapsed", "actions", "actionsDiv", "retryBtn", "cancelBtn", "pauseDuration", "type", "duration", "timeoutHandler"]
}
