{
  "version": 3,
  "sources": ["../accessibility.js"],
  "sourcesContent": ["/**\r\n * CORA Accessibility Enhancement Suite\r\n * \r\n * This module provides comprehensive accessibility features for the CORA wellness experience:\r\n * - Screen reader optimization\r\n * - Keyboard navigation enhancements\r\n * - High contrast mode support\r\n * - Focus management\r\n * - Voice control integration\r\n * - Cognitive accessibility features\r\n * - Motion reduction support\r\n */\r\n\r\nclass CORAAccessibility {\r\n    constructor() {\r\n        this.currentFocus = null;\r\n        this.focusHistory = [];\r\n        this.voiceControlActive = false;\r\n        this.highContrastMode = false;\r\n        this.reducedMotionMode = false;\r\n        this.darkMode = false;\r\n        this.fontSize = 16; // Base font size in pixels\r\n        \r\n        // Load saved preferences\r\n        this.loadPreferences();\r\n        \r\n        this.init();\r\n    }\r\n    \r\n    init() {\r\n        // Remove any existing voice control button\r\n        const existingVoiceButton = document.getElementById('voice-control-toggle');\r\n        if (existingVoiceButton) {\r\n            existingVoiceButton.remove();\r\n        }\r\n        \r\n        // Setup core accessibility features\r\n        this.setupKeyboardNavigation();\r\n        this.setupScreenReaderSupport();\r\n        this.setupFocusManagement();\r\n        // Voice control temporarily disabled - integrated into CORA chat\r\n        // this.setupVoiceControl();\r\n        this.setupHighContrastMode();\r\n        this.setupReducedMotion();\r\n        this.setupFontSizeControls();\r\n        this.setupCognitiveAccessibility();\r\n        this.setupDarkMode();\r\n        \r\n        // Monitor for accessibility preferences\r\n        this.monitorAccessibilityPreferences();\r\n        \r\n        // Setup accessibility testing\r\n        this.setupAccessibilityTesting();\r\n    }\r\n    \r\n    /**\r\n     * Monitor accessibility preferences and apply them\r\n     */\r\n    monitorAccessibilityPreferences() {\r\n        // Monitor for system preference changes\r\n        if (window.matchMedia) {\r\n            // Reduced motion preference\r\n            const motionQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\r\n            motionQuery.addEventListener('change', (e) => {\r\n                if (e.matches) {\r\n                    this.applyReducedMotion();\r\n                } else {\r\n                    this.removeReducedMotion();\r\n                }\r\n            });\r\n            \r\n            // High contrast preference\r\n            const contrastQuery = window.matchMedia('(prefers-contrast: high)');\r\n            contrastQuery.addEventListener('change', (e) => {\r\n                if (e.matches) {\r\n                    this.applyHighContrastStyles();\r\n                }\r\n            });\r\n            \r\n            // Color scheme preference\r\n            const colorSchemeQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n            colorSchemeQuery.addEventListener('change', (e) => {\r\n                if (window.darkModeManager) {\r\n                    window.darkModeManager.setTheme(e.matches ? 'dark' : 'light');\r\n                }\r\n            });\r\n        }\r\n        \r\n        // Load saved preferences\r\n        this.loadPreferences();\r\n        \r\n        // Monitor for new elements being added\r\n        this.monitorAccessibilityIssues();\r\n    }\r\n    \r\n    /**\r\n     * Keyboard Navigation\r\n     */\r\n    setupKeyboardNavigation() {\r\n        // Enhanced keyboard navigation\r\n        document.addEventListener('keydown', (e) => {\r\n            this.handleKeyboardNavigation(e);\r\n        });\r\n        \r\n        // Skip to main content link - DISABLED\r\n        // this.createSkipLink();\r\n        \r\n        // Enhanced tab navigation\r\n        this.enhanceTabNavigation();\r\n    }\r\n    \r\n    handleKeyboardNavigation(e) {\r\n        const target = e.target;\r\n        \r\n        // Skip to main content\r\n        if (e.key === 'Tab' && e.shiftKey === false && target.classList.contains('skip-link')) {\r\n            e.preventDefault();\r\n            this.focusMainContent();\r\n        }\r\n        \r\n        // Enhanced arrow key navigation for cards\r\n        if (target.classList.contains('wellness-card') || target.closest('.wellness-card')) {\r\n            this.handleCardNavigation(e, target);\r\n        }\r\n        \r\n        // Voice control shortcuts\r\n        if (e.altKey && e.key === 'v') {\r\n            e.preventDefault();\r\n            this.toggleVoiceControl();\r\n        }\r\n        \r\n        // High contrast toggle\r\n        if (e.altKey && e.key === 'h') {\r\n            e.preventDefault();\r\n            this.toggleHighContrast();\r\n        }\r\n        \r\n        // Font size controls\r\n        if (e.altKey && e.key === '=') {\r\n            e.preventDefault();\r\n            this.increaseFontSize();\r\n        }\r\n        \r\n        if (e.altKey && e.key === '-') {\r\n            e.preventDefault();\r\n            this.decreaseFontSize();\r\n        }\r\n        \r\n        // Reset font size\r\n        if (e.altKey && e.key === '0') {\r\n            e.preventDefault();\r\n            this.resetFontSize();\r\n        }\r\n    }\r\n    \r\n    createSkipLink() {\r\n        const skipLink = document.createElement('a');\r\n        skipLink.href = '#main-content';\r\n        skipLink.className = 'skip-link';\r\n        skipLink.textContent = 'Skip to main content';\r\n        skipLink.style.cssText = `\r\n            position: absolute;\r\n            top: -40px;\r\n            left: 6px;\r\n            background: #FF9800;\r\n            color: white;\r\n            padding: 8px;\r\n            text-decoration: none;\r\n            border-radius: 4px;\r\n            z-index: 10000;\r\n            transition: top 0.3s;\r\n        `;\r\n        \r\n        skipLink.addEventListener('focus', () => {\r\n            skipLink.style.top = '6px';\r\n        });\r\n        \r\n        skipLink.addEventListener('blur', () => {\r\n            skipLink.style.top = '-40px';\r\n        });\r\n        \r\n        document.body.insertBefore(skipLink, document.body.firstChild);\r\n    }\r\n    \r\n    focusMainContent() {\r\n        const mainContent = document.querySelector('main') || document.querySelector('#main-content');\r\n        if (mainContent) {\r\n            mainContent.setAttribute('tabindex', '-1');\r\n            mainContent.focus();\r\n            this.announceToScreenReader('Main content area');\r\n        }\r\n    }\r\n    \r\n    enhanceTabNavigation() {\r\n        // Ensure all interactive elements are keyboard accessible\r\n        document.querySelectorAll('button, a, input, select, textarea, [tabindex]').forEach(element => {\r\n            if (!element.hasAttribute('tabindex')) {\r\n                element.setAttribute('tabindex', '0');\r\n            }\r\n            \r\n            // Add focus indicators\r\n            element.addEventListener('focus', () => {\r\n                this.addFocusIndicator(element);\r\n            });\r\n            \r\n            element.addEventListener('blur', () => {\r\n                this.removeFocusIndicator(element);\r\n            });\r\n        });\r\n    }\r\n    \r\n    handleCardNavigation(e, target) {\r\n        const card = target.closest('.wellness-card') || target;\r\n        const cards = Array.from(document.querySelectorAll('.wellness-card'));\r\n        const currentIndex = cards.indexOf(card);\r\n        \r\n        switch (e.key) {\r\n            case 'ArrowRight':\r\n                e.preventDefault();\r\n                this.focusNextCard(cards, currentIndex);\r\n                break;\r\n            case 'ArrowLeft':\r\n                e.preventDefault();\r\n                this.focusPreviousCard(cards, currentIndex);\r\n                break;\r\n            case 'Enter':\r\n            case ' ':\r\n                e.preventDefault();\r\n                this.activateCard(card);\r\n                break;\r\n        }\r\n    }\r\n    \r\n    focusNextCard(cards, currentIndex) {\r\n        const nextIndex = (currentIndex + 1) % cards.length;\r\n        cards[nextIndex].focus();\r\n        this.announceToScreenReader(`Card ${nextIndex + 1} of ${cards.length}`);\r\n    }\r\n    \r\n    focusPreviousCard(cards, currentIndex) {\r\n        const prevIndex = currentIndex === 0 ? cards.length - 1 : currentIndex - 1;\r\n        cards[prevIndex].focus();\r\n        this.announceToScreenReader(`Card ${prevIndex + 1} of ${cards.length}`);\r\n    }\r\n    \r\n    activateCard(card) {\r\n        const button = card.querySelector('button') || card;\r\n        if (button && button.click) {\r\n            button.click();\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Screen Reader Support\r\n     */\r\n    setupScreenReaderSupport() {\r\n        // Create live region for announcements\r\n        this.createLiveRegion();\r\n        \r\n        // Enhance ARIA labels\r\n        this.enhanceARIALabels();\r\n        \r\n        // Add descriptive text for complex interactions\r\n        this.addDescriptiveText();\r\n        \r\n        // Setup heading structure\r\n        this.setupHeadingStructure();\r\n    }\r\n    \r\n    createLiveRegion() {\r\n        const liveRegion = document.createElement('div');\r\n        liveRegion.id = 'screen-reader-announcements';\r\n        liveRegion.setAttribute('aria-live', 'polite');\r\n        liveRegion.setAttribute('aria-atomic', 'true');\r\n        liveRegion.className = 'sr-only';\r\n        liveRegion.style.cssText = `\r\n            position: absolute;\r\n            left: -10000px;\r\n            width: 1px;\r\n            height: 1px;\r\n            overflow: hidden;\r\n        `;\r\n        document.body.appendChild(liveRegion);\r\n    }\r\n    \r\n    announceToScreenReader(message) {\r\n        const liveRegion = document.getElementById('screen-reader-announcements');\r\n        if (liveRegion) {\r\n            liveRegion.textContent = message;\r\n            setTimeout(() => {\r\n                liveRegion.textContent = '';\r\n            }, 1000);\r\n        }\r\n    }\r\n    \r\n    enhanceARIALabels() {\r\n        // Add missing ARIA labels\r\n        document.querySelectorAll('button:not([aria-label]):not([aria-labelledby])').forEach(button => {\r\n            if (!button.textContent.trim()) {\r\n                const icon = button.querySelector('i');\r\n                if (icon) {\r\n                    const iconClass = icon.className;\r\n                    let label = '';\r\n                    \r\n                    if (iconClass.includes('fa-plus')) label = 'Add new item';\r\n                    else if (iconClass.includes('fa-edit')) label = 'Edit';\r\n                    else if (iconClass.includes('fa-delete')) label = 'Delete';\r\n                    else if (iconClass.includes('fa-save')) label = 'Save';\r\n                    else if (iconClass.includes('fa-cancel')) label = 'Cancel';\r\n                    else if (iconClass.includes('fa-search')) label = 'Search';\r\n                    else if (iconClass.includes('fa-filter')) label = 'Filter';\r\n                    else if (iconClass.includes('fa-sort')) label = 'Sort';\r\n                    else label = 'Button';\r\n                    \r\n                    button.setAttribute('aria-label', label);\r\n                }\r\n            }\r\n        });\r\n        \r\n        // Enhance form labels\r\n        document.querySelectorAll('input, select, textarea').forEach(input => {\r\n            if (!input.hasAttribute('aria-label') && !input.hasAttribute('aria-labelledby')) {\r\n                const label = input.closest('label') || document.querySelector(`label[for=\"${input.id}\"]`);\r\n                if (label) {\r\n                    input.setAttribute('aria-labelledby', label.id || this.generateId(label));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    addDescriptiveText() {\r\n        // Add descriptive text for complex interactions\r\n        document.querySelectorAll('.wellness-card').forEach((card, index) => {\r\n            const title = card.querySelector('h3, h4')?.textContent || 'Card';\r\n            const description = card.querySelector('p')?.textContent || '';\r\n            \r\n            card.setAttribute('aria-label', `${title}. ${description}. Press Enter to activate.`);\r\n            card.setAttribute('role', 'button');\r\n            card.setAttribute('tabindex', '0');\r\n        });\r\n        \r\n        // Add descriptive text for progress indicators\r\n        document.querySelectorAll('.progress-bar, .progress-ring').forEach(progress => {\r\n            const value = progress.getAttribute('aria-valuenow') || '0';\r\n            const max = progress.getAttribute('aria-valuemax') || '100';\r\n            const label = progress.getAttribute('aria-label') || 'Progress';\r\n            \r\n            progress.setAttribute('aria-label', `${label}: ${value}% complete`);\r\n        });\r\n    }\r\n    \r\n    setupHeadingStructure() {\r\n        // Ensure proper heading hierarchy\r\n        const headings = document.querySelectorAll('h1, h2, h3, h4, h5, h6');\r\n        let currentLevel = 0;\r\n        \r\n        headings.forEach(heading => {\r\n            const level = parseInt(heading.tagName.charAt(1));\r\n            \r\n            if (level > currentLevel + 1) {\r\n                console.warn('Skipped heading level:', heading);\r\n            }\r\n            \r\n            currentLevel = level;\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Focus Management\r\n     */\r\n    setupFocusManagement() {\r\n        // Track focus history\r\n        document.addEventListener('focusin', (e) => {\r\n            this.focusHistory.push(e.target);\r\n            if (this.focusHistory.length > 10) {\r\n                this.focusHistory.shift();\r\n            }\r\n        });\r\n        \r\n        // Trap focus in modals\r\n        this.setupFocusTrapping();\r\n        \r\n        // Restore focus after modal close\r\n        this.setupFocusRestoration();\r\n    }\r\n    \r\n    setupFocusTrapping() {\r\n        document.querySelectorAll('[role=\"dialog\"], .modal').forEach(modal => {\r\n            const focusableElements = modal.querySelectorAll(\r\n                'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\r\n            );\r\n            \r\n            const firstElement = focusableElements[0];\r\n            const lastElement = focusableElements[focusableElements.length - 1];\r\n            \r\n            modal.addEventListener('keydown', (e) => {\r\n                if (e.key === 'Tab') {\r\n                    if (e.shiftKey) {\r\n                        if (document.activeElement === firstElement) {\r\n                            e.preventDefault();\r\n                            lastElement.focus();\r\n                        }\r\n                    } else {\r\n                        if (document.activeElement === lastElement) {\r\n                            e.preventDefault();\r\n                            firstElement.focus();\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n    \r\n    setupFocusRestoration() {\r\n        // Store focus before opening modal\r\n        document.querySelectorAll('[data-modal-trigger]').forEach(trigger => {\r\n            trigger.addEventListener('click', () => {\r\n                this.currentFocus = document.activeElement;\r\n            });\r\n        });\r\n        \r\n        // Restore focus after modal close\r\n        document.querySelectorAll('[data-modal-close]').forEach(closeBtn => {\r\n            closeBtn.addEventListener('click', () => {\r\n                if (this.currentFocus) {\r\n                    setTimeout(() => {\r\n                        this.currentFocus.focus();\r\n                    }, 100);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    \r\n    addFocusIndicator(element) {\r\n        element.style.outline = '2px solid #FF9800';\r\n        element.style.outlineOffset = '2px';\r\n    }\r\n    \r\n    removeFocusIndicator(element) {\r\n        element.style.outline = '';\r\n        element.style.outlineOffset = '';\r\n    }\r\n    \r\n    /**\r\n     * Voice Control Integration\r\n     */\r\n    setupVoiceControl() {\r\n        // Voice control toggle\r\n        this.createVoiceControlToggle();\r\n        \r\n        // Voice commands\r\n        this.setupVoiceCommands();\r\n    }\r\n    \r\n    createVoiceControlToggle() {\r\n        const toggle = document.createElement('button');\r\n        toggle.id = 'voice-control-toggle';\r\n        toggle.className = 'accessibility-toggle';\r\n        toggle.setAttribute('aria-label', 'Toggle voice control');\r\n        toggle.innerHTML = '<i class=\"fas fa-microphone\"></i>';\r\n        toggle.style.cssText = `\r\n            position: fixed;\r\n            bottom: 20px;\r\n            right: 20px;\r\n            width: 50px;\r\n            height: 50px;\r\n            border-radius: 50%;\r\n            background: #FF9800;\r\n            color: white;\r\n            border: none;\r\n            cursor: pointer;\r\n            z-index: 1000;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n        `;\r\n        \r\n        toggle.addEventListener('click', () => {\r\n            this.toggleVoiceControl();\r\n        });\r\n        \r\n        document.body.appendChild(toggle);\r\n    }\r\n    \r\n    toggleVoiceControl() {\r\n        this.voiceControlActive = !this.voiceControlActive;\r\n        const toggle = document.getElementById('voice-control-toggle');\r\n        \r\n        if (this.voiceControlActive) {\r\n            toggle.innerHTML = '<i class=\"fas fa-microphone-slash\"></i>';\r\n            toggle.style.background = '#E74C3C';\r\n            this.startVoiceRecognition();\r\n            this.announceToScreenReader('Voice control activated');\r\n        } else {\r\n            toggle.innerHTML = '<i class=\"fas fa-microphone\"></i>';\r\n            toggle.style.background = '#FF9800';\r\n            this.stopVoiceRecognition();\r\n            this.announceToScreenReader('Voice control deactivated');\r\n        }\r\n    }\r\n    \r\n    setupVoiceCommands() {\r\n        if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\r\n            const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n            this.recognition = new SpeechRecognition();\r\n            \r\n            this.recognition.continuous = true;\r\n            this.recognition.interimResults = false;\r\n            this.recognition.lang = navigator.language || 'en-US';\r\n            \r\n            this.recognition.onresult = (event) => {\r\n                const command = event.results[event.results.length - 1][0].transcript.toLowerCase();\r\n                this.processVoiceCommand(command);\r\n            };\r\n            \r\n            this.recognition.onerror = (event) => {\r\n                console.error('Voice recognition error:', event.error);\r\n                if (event.error === 'no-speech') {\r\n                    this.announceToScreenReader('No speech detected. Please try again.');\r\n                } else {\r\n                    this.announceToScreenReader('Voice recognition error. Please check your microphone.');\r\n                }\r\n            };\r\n            \r\n            this.recognition.onend = () => {\r\n                if (this.voiceControlActive) {\r\n                    // Restart if still active\r\n                    setTimeout(() => {\r\n                        if (this.voiceControlActive) {\r\n                            this.startVoiceRecognition();\r\n                        }\r\n                    }, 1000);\r\n                }\r\n            };\r\n        }\r\n    }\r\n    \r\n    startVoiceRecognition() {\r\n        if (this.recognition) {\r\n            this.recognition.start();\r\n        }\r\n    }\r\n    \r\n    stopVoiceRecognition() {\r\n        if (this.recognition) {\r\n            this.recognition.stop();\r\n        }\r\n    }\r\n    \r\n    processVoiceCommand(command) {\r\n        // Announce the command for confirmation\r\n        this.announceToScreenReader(`Processing command: ${command}`);\r\n        \r\n        if (command.includes('go to dashboard') || command.includes('dashboard')) {\r\n            window.location.href = '/dashboard';\r\n        } else if (command.includes('go to expenses') || command.includes('expenses')) {\r\n            window.location.href = '/expenses';\r\n        } else if (command.includes('add expense') || command.includes('new expense')) {\r\n            document.querySelector('#quickAddBtn')?.click();\r\n        } else if (command.includes('search')) {\r\n            document.querySelector('input[type=\"search\"]')?.focus();\r\n        } else if (command.includes('help')) {\r\n            this.showHelp();\r\n        } else if (command.includes('close') || command.includes('cancel')) {\r\n            document.querySelector('.modal .close')?.click();\r\n        } else if (command.includes('next')) {\r\n            this.navigateNext();\r\n        } else if (command.includes('previous') || command.includes('back')) {\r\n            this.navigatePrevious();\r\n        } else if (command.includes('save')) {\r\n            document.querySelector('button[type=\"submit\"]')?.click();\r\n        } else if (command.includes('logout') || command.includes('sign out')) {\r\n            window.location.href = '/logout';\r\n        } else if (command.includes('settings')) {\r\n            window.location.href = '/settings';\r\n        } else {\r\n            this.announceToScreenReader('Command not recognized. Say \"help\" for available commands.');\r\n        }\r\n    }\r\n    \r\n    navigateNext() {\r\n        // Navigate to next focusable element\r\n        const focusable = document.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\r\n        const current = document.activeElement;\r\n        const currentIndex = Array.from(focusable).indexOf(current);\r\n        if (currentIndex < focusable.length - 1) {\r\n            focusable[currentIndex + 1].focus();\r\n        }\r\n    }\r\n    \r\n    navigatePrevious() {\r\n        // Navigate to previous focusable element\r\n        const focusable = document.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\r\n        const current = document.activeElement;\r\n        const currentIndex = Array.from(focusable).indexOf(current);\r\n        if (currentIndex > 0) {\r\n            focusable[currentIndex - 1].focus();\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * High Contrast Mode\r\n     */\r\n    setupHighContrastMode() {\r\n        this.createHighContrastToggle();\r\n        this.applyHighContrastStyles();\r\n    }\r\n    \r\n    createHighContrastToggle() {\r\n        const toggle = document.createElement('button');\r\n        toggle.id = 'high-contrast-toggle';\r\n        toggle.className = 'accessibility-toggle';\r\n        toggle.setAttribute('aria-label', 'Toggle high contrast mode');\r\n        toggle.innerHTML = '<i class=\"fas fa-adjust\"></i>';\r\n        toggle.style.cssText = `\r\n            position: fixed;\r\n            bottom: 20px;\r\n            right: 80px;\r\n            width: 50px;\r\n            height: 50px;\r\n            border-radius: 50%;\r\n            background: #333;\r\n            color: white;\r\n            border: 2px solid white;\r\n            cursor: pointer;\r\n            z-index: 1000;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n        `;\r\n        \r\n        toggle.addEventListener('click', () => {\r\n            this.toggleHighContrast();\r\n        });\r\n        \r\n        document.body.appendChild(toggle);\r\n    }\r\n    \r\n    toggleHighContrast() {\r\n        this.highContrastMode = !this.highContrastMode;\r\n        document.body.classList.toggle('high-contrast', this.highContrastMode);\r\n        \r\n        const toggle = document.getElementById('high-contrast-toggle');\r\n        if (this.highContrastMode) {\r\n            toggle.style.background = '#fff';\r\n            toggle.style.color = '#000';\r\n            this.announceToScreenReader('High contrast mode activated');\r\n        } else {\r\n            toggle.style.background = '#333';\r\n            toggle.style.color = '#fff';\r\n            this.announceToScreenReader('High contrast mode deactivated');\r\n        }\r\n        \r\n        this.savePreferences();\r\n    }\r\n    \r\n    applyHighContrastStyles() {\r\n        const style = document.createElement('style');\r\n        style.textContent = `\r\n            .high-contrast {\r\n                background: #000 !important;\r\n                color: #fff !important;\r\n            }\r\n            \r\n            .high-contrast * {\r\n                background: #000 !important;\r\n                color: #fff !important;\r\n                border-color: #fff !important;\r\n            }\r\n            \r\n            .high-contrast .wellness-card {\r\n                background: #000 !important;\r\n                border: 2px solid #fff !important;\r\n                color: #fff !important;\r\n            }\r\n            \r\n            .high-contrast .wellness-btn {\r\n                background: #fff !important;\r\n                color: #000 !important;\r\n                border: 2px solid #fff !important;\r\n            }\r\n            \r\n            .high-contrast input, .high-contrast select, .high-contrast textarea {\r\n                background: #000 !important;\r\n                color: #fff !important;\r\n                border: 2px solid #fff !important;\r\n            }\r\n        `;\r\n        document.head.appendChild(style);\r\n    }\r\n    \r\n    /**\r\n     * Reduced Motion Support\r\n     */\r\n    setupReducedMotion() {\r\n        // Check for reduced motion preference\r\n        if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) {\r\n            this.reducedMotionMode = true;\r\n            this.applyReducedMotion();\r\n        }\r\n        \r\n        // Listen for preference changes\r\n        window.matchMedia('(prefers-reduced-motion: reduce)').addEventListener('change', (e) => {\r\n            this.reducedMotionMode = e.matches;\r\n            if (this.reducedMotionMode) {\r\n                this.applyReducedMotion();\r\n            } else {\r\n                this.removeReducedMotion();\r\n            }\r\n        });\r\n    }\r\n    \r\n    applyReducedMotion() {\r\n        const style = document.createElement('style');\r\n        style.id = 'reduced-motion-styles';\r\n        style.textContent = `\r\n            *, *::before, *::after {\r\n                animation-duration: 0.01ms !important;\r\n                animation-iteration-count: 1 !important;\r\n                transition-duration: 0.01ms !important;\r\n                scroll-behavior: auto !important;\r\n            }\r\n        `;\r\n        document.head.appendChild(style);\r\n    }\r\n    \r\n    removeReducedMotion() {\r\n        const style = document.getElementById('reduced-motion-styles');\r\n        if (style) {\r\n            style.remove();\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Font Size Controls\r\n     */\r\n    setupFontSizeControls() {\r\n        this.createFontSizeControls();\r\n        this.applyFontSize();\r\n    }\r\n    \r\n    createFontSizeControls() {\r\n        const controls = document.createElement('div');\r\n        controls.id = 'font-size-controls';\r\n        controls.className = 'accessibility-controls';\r\n        controls.style.cssText = `\r\n            position: fixed;\r\n            bottom: 80px;\r\n            left: 20px;\r\n            display: flex;\r\n            gap: 10px;\r\n            z-index: 1000;\r\n            background: rgba(255, 255, 255, 0.9);\r\n            padding: 8px;\r\n            border-radius: 25px;\r\n            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n        `;\r\n        \r\n        const decreaseBtn = document.createElement('button');\r\n        decreaseBtn.innerHTML = 'A-';\r\n        decreaseBtn.setAttribute('aria-label', 'Decrease font size');\r\n        decreaseBtn.addEventListener('click', () => this.decreaseFontSize());\r\n        \r\n        const increaseBtn = document.createElement('button');\r\n        increaseBtn.innerHTML = 'A+';\r\n        increaseBtn.setAttribute('aria-label', 'Increase font size');\r\n        increaseBtn.addEventListener('click', () => this.increaseFontSize());\r\n        \r\n        const resetBtn = document.createElement('button');\r\n        resetBtn.innerHTML = 'A';\r\n        resetBtn.setAttribute('aria-label', 'Reset font size');\r\n        resetBtn.addEventListener('click', () => this.resetFontSize());\r\n        \r\n        // Apply individual colors to each button\r\n        decreaseBtn.style.cssText = `\r\n            width: 40px;\r\n            height: 40px;\r\n            border-radius: 50%;\r\n            background: #1976D2;\r\n            color: white;\r\n            border: none;\r\n            cursor: pointer;\r\n            font-weight: bold;\r\n            transition: all 0.3s ease;\r\n        `;\r\n        \r\n        increaseBtn.style.cssText = `\r\n            width: 40px;\r\n            height: 40px;\r\n            border-radius: 50%;\r\n            background: #69F0AE;\r\n            color: #1a1a1a;\r\n            border: none;\r\n            cursor: pointer;\r\n            font-weight: bold;\r\n            transition: all 0.3s ease;\r\n        `;\r\n        \r\n        resetBtn.style.cssText = `\r\n            width: 40px;\r\n            height: 40px;\r\n            border-radius: 50%;\r\n            background: #FF9800;\r\n            color: #1a1a1a;\r\n            border: none;\r\n            cursor: pointer;\r\n            font-weight: bold;\r\n            transition: all 0.3s ease;\r\n        `;\r\n        \r\n        controls.appendChild(decreaseBtn);\r\n        controls.appendChild(resetBtn);\r\n        controls.appendChild(increaseBtn);\r\n        \r\n        document.body.appendChild(controls);\r\n    }\r\n    \r\n    increaseFontSize() {\r\n        this.fontSize = Math.min(this.fontSize + 2, 24);\r\n        this.applyFontSize();\r\n        this.announceToScreenReader(`Font size increased to ${this.fontSize} pixels`);\r\n        this.savePreferences();\r\n    }\r\n    \r\n    decreaseFontSize() {\r\n        this.fontSize = Math.max(this.fontSize - 2, 12);\r\n        this.applyFontSize();\r\n        this.announceToScreenReader(`Font size decreased to ${this.fontSize} pixels`);\r\n        this.savePreferences();\r\n    }\r\n    \r\n    resetFontSize() {\r\n        this.fontSize = 16;\r\n        this.applyFontSize();\r\n        this.announceToScreenReader('Font size reset to default');\r\n        this.savePreferences();\r\n    }\r\n    \r\n    applyFontSize() {\r\n        document.documentElement.style.fontSize = `${this.fontSize}px`;\r\n    }\r\n    \r\n    /**\r\n     * Cognitive Accessibility\r\n     */\r\n    setupCognitiveAccessibility() {\r\n        // Add reading time estimates\r\n        this.addReadingTimeEstimates();\r\n        \r\n        // Simplify complex language\r\n        this.simplifyLanguage();\r\n        \r\n        // Add progress indicators\r\n        this.addProgressIndicators();\r\n        \r\n        // Setup error prevention\r\n        this.setupErrorPrevention();\r\n    }\r\n    \r\n    addReadingTimeEstimates() {\r\n        document.querySelectorAll('article, .content-section').forEach(section => {\r\n            const text = section.textContent;\r\n            const wordCount = text.split(' ').length;\r\n            const readingTime = Math.ceil(wordCount / 200); // Average reading speed\r\n            \r\n            const estimate = document.createElement('div');\r\n            estimate.className = 'reading-time';\r\n            estimate.textContent = `Estimated reading time: ${readingTime} minute${readingTime !== 1 ? 's' : ''}`;\r\n            estimate.style.cssText = `\r\n                font-size: 0.875rem;\r\n                color: #666;\r\n                margin-bottom: 1rem;\r\n            `;\r\n            \r\n            section.insertBefore(estimate, section.firstChild);\r\n        });\r\n    }\r\n    \r\n    simplifyLanguage() {\r\n        // Replace complex terms with simpler alternatives\r\n        const replacements = {\r\n            'utilize': 'use',\r\n            'facilitate': 'help',\r\n            'implement': 'start',\r\n            'optimize': 'improve',\r\n            'leverage': 'use',\r\n            'streamline': 'simplify'\r\n        };\r\n        \r\n        // Only apply to content areas, not technical elements\r\n        document.querySelectorAll('.content p, .content h1, .content h2, .content h3, article p').forEach(element => {\r\n            // Skip if element has code or technical content\r\n            if (element.querySelector('code') || element.classList.contains('technical')) {\r\n                return;\r\n            }\r\n            \r\n            let text = element.textContent;\r\n            Object.entries(replacements).forEach(([complex, simple]) => {\r\n                text = text.replace(new RegExp(`\\\\b${complex}\\\\b`, 'gi'), simple);\r\n            });\r\n            element.textContent = text;\r\n        });\r\n    }\r\n    \r\n    addProgressIndicators() {\r\n        // Add progress indicators for multi-step processes\r\n        document.querySelectorAll('.onboarding-step, .wizard-step').forEach((step, index, steps) => {\r\n            const progress = document.createElement('div');\r\n            progress.className = 'step-progress';\r\n            progress.textContent = `Step ${index + 1} of ${steps.length}`;\r\n            progress.style.cssText = `\r\n                font-size: 0.875rem;\r\n                color: #666;\r\n                margin-bottom: 0.5rem;\r\n            `;\r\n            \r\n            step.insertBefore(progress, step.firstChild);\r\n        });\r\n    }\r\n    \r\n    setupErrorPrevention() {\r\n        // Add confirmation for destructive actions\r\n        document.querySelectorAll('button[data-destructive]').forEach(button => {\r\n            button.addEventListener('click', (e) => {\r\n                if (!confirm('Are you sure you want to perform this action? This cannot be undone.')) {\r\n                    e.preventDefault();\r\n                }\r\n            });\r\n        });\r\n        \r\n        // Add undo functionality\r\n        this.setupUndoFunctionality();\r\n    }\r\n    \r\n    setupUndoFunctionality() {\r\n        const undoStack = [];\r\n        \r\n        // Track user actions\r\n        document.addEventListener('click', (e) => {\r\n            if (e.target.matches('button[data-trackable]')) {\r\n                undoStack.push({\r\n                    action: e.target.textContent,\r\n                    timestamp: Date.now(),\r\n                    element: e.target\r\n                });\r\n            }\r\n        });\r\n        \r\n        // Add undo button\r\n        if (undoStack.length > 0) {\r\n            const undoBtn = document.createElement('button');\r\n            undoBtn.textContent = 'Undo';\r\n            undoBtn.addEventListener('click', () => {\r\n                const lastAction = undoStack.pop();\r\n                if (lastAction) {\r\n                    // Implement undo logic based on action type\r\n                    this.announceToScreenReader(`Undid: ${lastAction.action}`);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Accessibility Testing\r\n     */\r\n    setupAccessibilityTesting() {\r\n        // Run accessibility checks\r\n        this.runAccessibilityChecks();\r\n        \r\n        // Monitor for accessibility issues\r\n        this.monitorAccessibilityIssues();\r\n    }\r\n    \r\n    runAccessibilityChecks() {\r\n        // Check for missing alt text\r\n        document.querySelectorAll('img:not([alt])').forEach(img => {\r\n            console.warn('Image missing alt text:', img);\r\n        });\r\n        \r\n        // Check for missing labels\r\n        document.querySelectorAll('input:not([aria-label]):not([aria-labelledby])').forEach(input => {\r\n            if (!input.closest('label')) {\r\n                console.warn('Input missing label:', input);\r\n            }\r\n        });\r\n        \r\n        // Check for proper heading structure\r\n        this.validateHeadingStructure();\r\n        \r\n        // Check for sufficient color contrast\r\n        this.checkColorContrast();\r\n    }\r\n    \r\n    validateHeadingStructure() {\r\n        const headings = document.querySelectorAll('h1, h2, h3, h4, h5, h6');\r\n        let previousLevel = 0;\r\n        \r\n        headings.forEach(heading => {\r\n            const currentLevel = parseInt(heading.tagName.charAt(1));\r\n            if (currentLevel > previousLevel + 1) {\r\n                console.warn('Skipped heading level:', heading);\r\n            }\r\n            previousLevel = currentLevel;\r\n        });\r\n    }\r\n    \r\n    checkColorContrast() {\r\n        // Basic color contrast check\r\n        document.querySelectorAll('*').forEach(element => {\r\n            const style = window.getComputedStyle(element);\r\n            const backgroundColor = style.backgroundColor;\r\n            const color = style.color;\r\n            \r\n            // Simple contrast check (this is a basic implementation)\r\n            if (backgroundColor && color) {\r\n                // In a real implementation, you would calculate the actual contrast ratio\r\n                // For now, we'll just log elements with potential contrast issues\r\n                if (backgroundColor === color) {\r\n                    console.warn('Potential contrast issue:', element);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    monitorAccessibilityIssues() {\r\n        // Monitor for dynamically added content\r\n        this.mutationObserver = new MutationObserver((mutations) => {\r\n            mutations.forEach((mutation) => {\r\n                mutation.addedNodes.forEach((node) => {\r\n                    if (node.nodeType === Node.ELEMENT_NODE) {\r\n                        this.checkNewElement(node);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n        \r\n        this.mutationObserver.observe(document.body, {\r\n            childList: true,\r\n            subtree: true\r\n        });\r\n    }\r\n    \r\n    checkNewElement(element) {\r\n        // Check new elements for accessibility issues\r\n        if (element.tagName === 'IMG' && !element.hasAttribute('alt')) {\r\n            console.warn('New image missing alt text:', element);\r\n        }\r\n        \r\n        if (element.tagName === 'BUTTON' && !element.textContent.trim() && !element.hasAttribute('aria-label')) {\r\n            console.warn('New button missing accessible label:', element);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Preferences Management\r\n     */\r\n    loadPreferences() {\r\n        const saved = localStorage.getItem('coraAccessibilityPrefs');\r\n        if (saved) {\r\n            try {\r\n                const prefs = JSON.parse(saved);\r\n                this.voiceControlActive = prefs.voiceControlActive || false;\r\n                this.highContrastMode = prefs.highContrastMode || false;\r\n                this.darkMode = prefs.darkMode || false;\r\n                this.fontSize = prefs.fontSize || 16;\r\n                \r\n                // Apply saved preferences\r\n                if (this.highContrastMode) {\r\n                    document.body.classList.add('high-contrast');\r\n                }\r\n                if (this.darkMode) {\r\n                    document.body.classList.add('dark-mode');\r\n                }\r\n                this.applyFontSize();\r\n            } catch (e) {\r\n                console.error('Error loading accessibility preferences:', e);\r\n            }\r\n        }\r\n        \r\n        // Check system preferences\r\n        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n            this.darkMode = true;\r\n            document.body.classList.add('dark-mode');\r\n        }\r\n    }\r\n    \r\n    savePreferences() {\r\n        const prefs = {\r\n            voiceControlActive: this.voiceControlActive,\r\n            highContrastMode: this.highContrastMode,\r\n            darkMode: this.darkMode,\r\n            fontSize: this.fontSize\r\n        };\r\n        localStorage.setItem('coraAccessibilityPrefs', JSON.stringify(prefs));\r\n    }\r\n    \r\n    /**\r\n     * Dark Mode Support\r\n     */\r\n    setupDarkMode() {\r\n        // Check system preference\r\n        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {\r\n            if (!this.highContrastMode) { // Don't override high contrast\r\n                this.darkMode = e.matches;\r\n                document.body.classList.toggle('dark-mode', this.darkMode);\r\n                this.savePreferences();\r\n            }\r\n        });\r\n        \r\n        // Add dark mode styles\r\n        const style = document.createElement('style');\r\n        style.textContent = `\r\n            .dark-mode {\r\n                background: #1a1a1a !important;\r\n                color: #e0e0e0 !important;\r\n            }\r\n            \r\n            .dark-mode .wellness-card {\r\n                background: #2a2a2a !important;\r\n                border-color: #3a3a3a !important;\r\n                color: #e0e0e0 !important;\r\n            }\r\n            \r\n            .dark-mode input, .dark-mode select, .dark-mode textarea {\r\n                background: #2a2a2a !important;\r\n                border-color: #3a3a3a !important;\r\n                color: #e0e0e0 !important;\r\n            }\r\n            \r\n            .dark-mode .wellness-btn {\r\n                background: linear-gradient(135deg, #7B4EA8, #48C87B) !important;\r\n            }\r\n        `;\r\n        document.head.appendChild(style);\r\n    }\r\n    \r\n    /**\r\n     * Utility Methods\r\n     */\r\n    generateId(element) {\r\n        if (!element.id) {\r\n            element.id = 'element-' + Math.random().toString(36).substr(2, 9);\r\n        }\r\n        return element.id;\r\n    }\r\n    \r\n    showHelp() {\r\n        const help = document.createElement('div');\r\n        help.className = 'accessibility-help';\r\n        help.innerHTML = `\r\n            <h2>Accessibility Help</h2>\r\n            <ul>\r\n                <li><strong>Alt + V:</strong> Toggle voice control</li>\r\n                <li><strong>Alt + H:</strong> Toggle high contrast</li>\r\n                <li><strong>Alt + =:</strong> Increase font size</li>\r\n                <li><strong>Alt + -:</strong> Decrease font size</li>\r\n                <li><strong>Alt + 0:</strong> Reset font size</li>\r\n                <li><strong>Tab:</strong> Navigate with keyboard</li>\r\n                <li><strong>Enter/Space:</strong> Activate buttons</li>\r\n            </ul>\r\n        `;\r\n        \r\n        help.style.cssText = `\r\n            position: fixed;\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50%, -50%);\r\n            background: white;\r\n            padding: 2rem;\r\n            border-radius: 8px;\r\n            box-shadow: 0 4px 20px rgba(0,0,0,0.3);\r\n            z-index: 10000;\r\n            max-width: 400px;\r\n        `;\r\n        \r\n        // Add close button\r\n        const closeBtn = document.createElement('button');\r\n        closeBtn.innerHTML = '&times;';\r\n        closeBtn.setAttribute('aria-label', 'Close help dialog');\r\n        closeBtn.style.cssText = `\r\n            position: absolute;\r\n            top: 10px;\r\n            right: 10px;\r\n            background: none;\r\n            border: none;\r\n            font-size: 24px;\r\n            cursor: pointer;\r\n            color: #666;\r\n        `;\r\n        closeBtn.addEventListener('click', () => help.remove());\r\n        help.appendChild(closeBtn);\r\n        \r\n        document.body.appendChild(help);\r\n        \r\n        // Close on escape\r\n        document.addEventListener('keydown', (e) => {\r\n            if (e.key === 'Escape') {\r\n                help.remove();\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Cleanup Method\r\n     */\r\n    cleanup() {\r\n        // Stop voice recognition\r\n        if (this.recognition) {\r\n            this.stopVoiceRecognition();\r\n        }\r\n        \r\n        // Disconnect mutation observer\r\n        if (this.mutationObserver) {\r\n            this.mutationObserver.disconnect();\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Public API\r\n     */\r\n    getAccessibilityStatus() {\r\n        return {\r\n            voiceControlActive: this.voiceControlActive,\r\n            highContrastMode: this.highContrastMode,\r\n            reducedMotionMode: this.reducedMotionMode,\r\n            fontSize: this.fontSize\r\n        };\r\n    }\r\n    \r\n    enableAccessibility() {\r\n        this.setupKeyboardNavigation();\r\n        this.setupScreenReaderSupport();\r\n        this.setupFocusManagement();\r\n    }\r\n}\r\n\r\n// Initialize accessibility features\r\nconst coraAccessibility = new CORAAccessibility();\r\n\r\n// Export for use in other modules\r\nwindow.CORAAccessibility = coraAccessibility;\r\n\r\n// Auto-enable on DOM ready\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    coraAccessibility.enableAccessibility();\r\n});\r\n\r\n// Cleanup on page unload\r\nwindow.addEventListener('beforeunload', () => {\r\n    coraAccessibility.cleanup();\r\n});\r\n\r\n// Export for module systems\r\nif (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = CORAAccessibility;\r\n} "],
  "mappings": "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",
  "names": ["require_accessibility", "__commonJSMin", "exports", "module", "CORAAccessibility", "existingVoiceButton", "e", "target", "skipLink", "mainContent", "element", "card", "cards", "currentIndex", "nextIndex", "prevIndex", "button", "liveRegion", "message", "icon", "iconClass", "label", "input", "index", "_a", "_b", "title", "description", "progress", "value", "max", "headings", "currentLevel", "heading", "level", "modal", "focusableElements", "firstElement", "lastElement", "trigger", "closeBtn", "toggle", "SpeechRecognition", "event", "command", "_c", "_d", "focusable", "current", "style", "controls", "decreaseBtn", "increaseBtn", "resetBtn", "section", "wordCount", "readingTime", "estimate", "replacements", "text", "complex", "simple", "step", "steps", "undoStack", "undoBtn", "lastAction", "img", "previousLevel", "backgroundColor", "color", "mutations", "mutation", "node", "saved", "prefs", "help", "coraAccessibility"]
}
