version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: secure_fastapi_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-fastapi_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD is required}
      POSTGRES_DB: ${POSTGRES_DB:-fastapi_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fastapi_user -d fastapi_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for rate limiting and caching
  redis:
    image: redis:7-alpine
    container_name: secure_fastapi_redis
    command: redis-server --requirepass ${REDIS_PASSWORD:?REDIS_PASSWORD is required}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Application
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: secure_fastapi_app
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-fastapi_user}:${POSTGRES_PASSWORD:?POSTGRES_PASSWORD is required}@postgres:5432/${POSTGRES_DB:-fastapi_db}
      - REDIS_URL=redis://:${REDIS_PASSWORD:?REDIS_PASSWORD is required}@redis:6379
      - SECRET_KEY=${SECRET_KEY:?SECRET_KEY is required}
      - ALLOWED_HOSTS=localhost,fastapi
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080
    ports:
      - "8000:8000"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn secure_fastapi_example:app --host 0.0.0.0 --port 8000 --reload

  # Nginx Reverse Proxy (optional but recommended for production)
  nginx:
    image: nginx:alpine
    container_name: secure_fastapi_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - fastapi

  # Prometheus for monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: secure_fastapi_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

volumes:
  postgres_data:
  redis_data:
  prometheus_data: